'Basic window configs
width = 600
height = 600
numbullets = 50

'GraphicsWindow configs
GraphicsWindow.Width = width
GraphicsWindow.Height = height
GraphicsWindow.CanResize = 0
GraphicsWindow.Title = "Save the planet"
GraphicsWindow.BackgroundColor = "black"
GraphicsWindow.Clear()

'Reload timer configs
Timer.Interval = 1000
Timer.Pause()
Timer.Tick = OnTick

'Call setup subroutines
FirstBarrierDraw()
SecondBarrierDraw()
FinalBarrierDraw()
RocketConstantsInitialize()
RocketInitialize()
RocketDraw()
BulletArrayInitialze()
GraphicsWindow.KeyDown = MoveRocket

'The game loop
GameLoop:
BulletUpdate()
BulletDraw()
Program.Delay(48)
Goto GameLoop

'Subroutines
Sub BulletArrayInitialze
  c = GraphicsWindow.BrushColor
  GraphicsWindow.BrushColor = "white"
  For i = 1 To numbullets
    bulletshape[i] = Shapes.AddEllipse(10, 10)
    Shapes.Move(bulletshape[i], -100, -100)
  EndFor  
  BulletArrayReset()
  GraphicsWindow.BrushColor = c
EndSub

Sub BulletArrayReset
  For i = 1 To numbullets
    bulletx[i] = 0
    bullety[i] = 0
  EndFor
  bulletIndex = 0
EndSub

Sub BulletFire
  If bulletIndex <= (numbullets - 1) Then
    bulletIndex = bulletIndex + 1
    bulletx[bulletIndex] = rocketX - 5
    bullety[bulletIndex] = rocketY
  EndIf
EndSub

Sub BulletUpdate
  For i = 1 To bulletIndex
    If bullety[i] >= -100 Then
      bullety[i] = bullety[i] - 6
    EndIf
  EndFor
EndSub

Sub BulletDraw
  For i = 1 To bulletIndex
    Shapes.Move(bulletshape[i], bulletx[i], bullety[i])
  EndFor
EndSub

Sub FirstBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "purple"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 300+j+2, width+10, 300+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

Sub SecondBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "blue"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 400+j+2, width+10, 400+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

Sub FinalBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "crimson"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 560+j+2, width+10, 560+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

Sub RocketConstantsInitialize
  rocketRectWidth = 6
  rocketRectHeight = 20 
  rocketHeadDiff = 8
  rocketWidthDiff = 4
  rocketMoveDiff = 8
  rocketRefillTicks = 0
EndSub

Sub RocketInitialize
  rocketX = 300
  rocketY = 500
  rocketBullets = numbullets
  GraphicsWindow.PenColor = "salmon"
  GraphicsWindow.BrushColor = "salmon"
  rect1 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)
  rect2 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)  
  rect3 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)
  
  GraphicsWindow.BrushColor = "yellow"
  bullets = Shapes.AddText("Bullet Count: " + rocketBullets)
  bulletTimer = Shapes.AddText("")
EndSub

Sub RocketDraw
  Shapes.Move(rect1, rocketX-(rocketRectWidth/2), rocketY)
  Shapes.Move(rect2, rocketX-(rocketRectWidth/2)-rocketRectWidth-rocketWidthDiff, rocketY+rocketHeadDiff)
  Shapes.Move(rect3, rocketX+(rocketRectWidth/2)+rocketWidthDiff, rocketY+rocketHeadDiff)
  Shapes.Move(bullets, 480, 590)
  Shapes.SetText(bullets, "Bullet Count: " + rocketBullets)
  Shapes.Move(bulletTimer, 480, 578)
EndSub

Sub MoveRocket
  If GraphicsWindow.LastKey = "Left" Then
    rocketX = rocketX - rocketMoveDiff
  ElseIf GraphicsWindow.LastKey = "Right" Then
    rocketX = rocketX + rocketMoveDiff
  ElseIf GraphicsWindow.LastKey = "Up" Then
    rocketBullets = rocketBullets - 1
    BulletFire()
  ElseIf GraphicsWindow.LastKey = "Space" Then
    rocketBullets = rocketBullets - 1
    BulletFire()
  EndIf
  
  If rocketBullets <= 0 Then
    rocketBullets = 0
    StartRefillTimer()
  EndIf
  
  If rocketX <= (rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth Then
    rocketX = (rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth
  EndIf  
  If rocketX >= width - ((rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth) Then
    rocketX = width - ((rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth)
  EndIf
  RocketDraw()
EndSub

Sub StartRefillTimer
  rocketRefillTicks = 0
  Timer.Tick = OnTick
  Timer.Resume()
EndSub

Sub OnTick
  If rocketRefillTicks >= 10 Then
    Timer.Pause()
    rocketBullets = numbullets
    rocketRefillTicks = 0
    Shapes.SetText(bulletTimer, "Reloaded")
    BulletArrayReset()
    RocketDraw()
  Else
    Shapes.SetText(bulletTimer, "Reload Time: " + (10 - rocketRefillTicks) + "s")
    rocketRefillTicks = rocketRefillTicks + 1
  EndIf
EndSub
