'===============================
'Main configs
'===============================
width = 600
height = 600
numbullets = 50
numSmallEnemeies = 20
numMediumEnemies = 10
numBigEnemies = 10
basepath = Program.Directory

'===============================
'Timer for reloading ammo
'===============================
Timer.Interval = 1000
Timer.Pause()
Timer.Tick = OnTick

'===============================
'Setup subroutines
'===============================
GraphicsWindow.Clear()
FirstBarrierDraw()
SecondBarrierDraw()
FinalBarrierDraw()
RocketConstantsInitialize()
RocketInitialize()
RocketDraw()
BulletArrayInitialze()
SmallEnemyArrayInitialize()

'===============================
'Graphics window configs
'===============================
GraphicsWindow.Width = width
GraphicsWindow.Height = height
GraphicsWindow.CanResize = 0
GraphicsWindow.Title = "Save the planet"
GraphicsWindow.BackgroundColor = "black"
GraphicsWindow.KeyDown = MoveRocket

'===============================
'Game loop
'===============================
GameLoop:
SmallEnemyUpdate()
BulletUpdate()
SmallEnemyDraw()
BulletDraw()
BulletSmallEnemyCollison()
Program.Delay(48)
Goto GameLoop

'===============================
'Subroutines
'===============================
' Enemies
Sub SmallEnemyArrayReset
  For i = 1 To numSmallEnemeies
    smallEnemyX[i] = 8 + Math.GetRandomNumber(width - 8)
    smallEnemyY[i] = -40 + (-1 * Math.GetRandomNumber(1000))
    smallEnemyAlive[i] = 1
  EndFor
EndSub

Sub SmallEnemyArrayInitialize
  c = GraphicsWindow.BrushColor
  GraphicsWindow.BrushColor = "white"
  For i = 1 To numSmallEnemeies
    smallEnemyShape[i] = Shapes.AddEllipse(6, 6)
    Shapes.Move(smallEnemyShape[i], -100, -100)
  EndFor
  SmallEnemyArrayReset()
  GraphicsWindow.BrushColor = c
EndSub

Sub SmallEnemyUpdate
  For i = 1 To numSmallEnemeies
    If smallEnemyAlive[i] = 1 Then
      smallEnemyY[i] = smallEnemyY[i] + 1
    Else
      Shapes.Animate(smallEnemyShape[i], smallEnemyX[i], 2 * height, 1000)
    EndIf
  EndFor
EndSub

Sub SmallEnemyDraw
  For i = 1 To numSmallEnemeies
    If smallEnemyAlive[i] = 1 Then
      Shapes.Move(smallEnemyShape[i], smallEnemyX[i], smallEnemyY[i])
    EndIf
  EndFor
EndSub

'Bullets
Sub BulletArrayInitialze
  c = GraphicsWindow.BrushColor
  GraphicsWindow.BrushColor = "white"
  For i = 1 To numbullets
    bulletshape[i] = Shapes.AddEllipse(10, 10)
    Shapes.Move(bulletshape[i], -100, -100)
  EndFor  
  BulletArrayReset()
  GraphicsWindow.BrushColor = c
EndSub

Sub BulletArrayReset
  For i = 1 To numbullets
    bulletx[i] = 0
    bullety[i] = 0
  EndFor
  bulletIndex = 0
EndSub

Sub BulletFire
  If bulletIndex <= (numbullets - 1) Then
    Sound.PlayClick()
    bulletIndex = bulletIndex + 1
    bulletx[bulletIndex] = rocketX - 5
    bullety[bulletIndex] = rocketY
  EndIf
EndSub

Sub BulletUpdate
  For i = 1 To bulletIndex
    If bullety[i] >= -100 Then
      bullety[i] = bullety[i] - 8
    EndIf
  EndFor
EndSub

Sub BulletDraw
  For i = 1 To bulletIndex
    Shapes.Move(bulletshape[i], bulletx[i], bullety[i])
  EndFor
EndSub

'Collison detection
'Bullet <==> SmallEnemy
'Bullet size = 10
'Enemy size 6
Sub BulletSmallEnemyCollison
  For i = 1 To numbullets
    For j = 1 To numSmallEnemeies
      b1 = bulletx[i]
      b2 = bullety[i]
      e1 = smallEnemyX[j]
      e2 = smallEnemyY[j]
      If e2 >= 6 Then
        If b2 >= 10 Then
          If e1 >= b1 - 6 Then
            If e1 <= b1 + 16 Then
              If (e2+10) >= b2 Then
                If (e2+10) <= b2 + 16 Then
                  smallEnemyAlive[j] = 0
                EndIf
              EndIf
            EndIf
          EndIf
        EndIf
      EndIf
    EndFor
  EndFor
EndSub

'Barriers
Sub FirstBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "purple"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 300+j+2, width+10, 300+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

Sub SecondBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "blue"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 400+j+2, width+10, 400+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

Sub FinalBarrierDraw
  i = 7
  p = GraphicsWindow.PenWidth
  c = GraphicsWindow.PenColor
  GraphicsWindow.PenColor = "crimson"
  For j = 1 To 10
    GraphicsWindow.PenWidth = i - j
    GraphicsWindow.DrawLine(0, 560+j+2, width+10, 560+j+2)
  EndFor
  GraphicsWindow.PenWidth = p
  GraphicsWindow.PenColor = c
EndSub

'Rocket
Sub RocketConstantsInitialize
  rocketRectWidth = 6
  rocketRectHeight = 20 
  rocketHeadDiff = 8
  rocketWidthDiff = 4
  rocketMoveDiff = 8
  rocketRefillTicks = 0
EndSub

Sub RocketInitialize
  rocketX = 300
  rocketY = 500
  rocketBullets = numbullets
  GraphicsWindow.PenColor = "salmon"
  GraphicsWindow.BrushColor = "salmon"
  rect1 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)
  rect2 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)  
  rect3 = Shapes.AddRectangle(rocketRectWidth, rocketRectHeight)
  
  GraphicsWindow.BrushColor = "yellow"
  bullets = Shapes.AddText("Bullet Count: " + rocketBullets)
  bulletTimer = Shapes.AddText("")
EndSub

Sub RocketDraw
  Shapes.Move(rect1, rocketX-(rocketRectWidth/2), rocketY)
  Shapes.Move(rect2, rocketX-(rocketRectWidth/2)-rocketRectWidth-rocketWidthDiff, rocketY+rocketHeadDiff)
  Shapes.Move(rect3, rocketX+(rocketRectWidth/2)+rocketWidthDiff, rocketY+rocketHeadDiff)
  Shapes.Move(bullets, 480, 590)
  Shapes.SetText(bullets, "Bullet Count: " + rocketBullets)
  Shapes.Move(bulletTimer, 480, 578)
EndSub

Sub MoveRocket
  If GraphicsWindow.LastKey = "Left" Then
    rocketX = rocketX - rocketMoveDiff
  ElseIf GraphicsWindow.LastKey = "Right" Then
    rocketX = rocketX + rocketMoveDiff
  ElseIf GraphicsWindow.LastKey = "Up" Then
    rocketBullets = rocketBullets - 1
    BulletFire()
  ElseIf GraphicsWindow.LastKey = "Space" Then
    rocketBullets = rocketBullets - 1
    BulletFire()
  EndIf
  
  If rocketBullets <= 0 Then
    rocketBullets = 0
    StartRefillTimer()
  EndIf
  
  If rocketX <= (rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth - 4 Then
    rocketX = (rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth - 4
  EndIf  
  If rocketX >= width - ((rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth) + 14 Then
    rocketX = width - ((rocketRectWidth/2) + rocketHeadDiff + rocketRectWidth) + 14
  EndIf
  RocketDraw()
EndSub

Sub StartRefillTimer
  rocketRefillTicks = 0
  Timer.Tick = OnTick
  Timer.Resume()
EndSub

Sub OnTick
  If rocketRefillTicks >= 10 Then
    Timer.Pause()
    rocketBullets = numbullets
    rocketRefillTicks = 0
    Shapes.SetText(bulletTimer, "Reloaded")
    BulletArrayReset()
    RocketDraw()
  Else
    Shapes.SetText(bulletTimer, "Reload Time: " + (10 - rocketRefillTicks) + "s")
    rocketRefillTicks = rocketRefillTicks + 1
  EndIf
EndSub
